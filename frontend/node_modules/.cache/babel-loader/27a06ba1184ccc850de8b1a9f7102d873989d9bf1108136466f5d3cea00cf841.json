{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Med Amine\\\\Desktop\\\\pfe\\\\main web\\\\python\\\\frontendai\\\\src\\\\pages\\\\Employees\\\\EditEmployee.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useData } from '../../Context/DataContext'; // Use the context\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditEmployee = () => {\n  _s();\n  const {\n    employees,\n    setEmployees\n  } = useData(); // Use context to get employees\n  const {\n    id\n  } = useParams(); // Get employee ID from URL\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    nom: '',\n    prenom: '',\n    email: '',\n    poste: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if employee is in the local context state\n    const employee = employees.find(emp => emp.id_employee.toString() === id);\n    if (employee) {\n      setForm({\n        nom: employee.nom,\n        prenom: employee.prenom,\n        email: employee.email,\n        poste: employee.poste\n      });\n      setLoading(false); // Stop loading when data is found\n    } else {\n      // If employee is not found in context, fetch from the server (fallback)\n      const fetchEmployee = async () => {\n        try {\n          const response = await axios.get(`http://localhost:5000/api/employees/${id}`);\n          const employeeData = response.data;\n          if (employeeData) {\n            setForm({\n              nom: employeeData.nom,\n              prenom: employeeData.prenom,\n              email: employeeData.email,\n              poste: employeeData.poste\n            });\n            setLoading(false);\n          } else {\n            navigate('/employees');\n          }\n        } catch (error) {\n          console.error('Error fetching employee:', error);\n          setError('Failed to fetch employee');\n          setLoading(false);\n          navigate('/employees');\n        }\n      };\n      fetchEmployee();\n    }\n  }, [id, employees, navigate]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const updatedEmployee = {\n        ...form,\n        id_employee: parseInt(id) // Ensure ID is an integer\n      };\n      const response = await axios.put(`/api/employees/${id}`, updatedEmployee);\n\n      // Update the context with the updated employee data\n      setEmployees(prevEmployees => prevEmployees.map(emp => emp.id_employee === parseInt(id) ? response.data : emp));\n      navigate('/employees');\n    } catch (error) {\n      console.error('Error updating employee:', error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(EditEmployee, \"Hpuft5nIoL4dWX6rcoSquyBsbhQ=\", false, function () {\n  return [useData, useParams, useNavigate];\n});\n_c = EditEmployee;\nexport default EditEmployee;\nvar _c;\n$RefreshReg$(_c, \"EditEmployee\");","map":{"version":3,"names":["React","useState","useEffect","useData","useNavigate","useParams","axios","jsxDEV","_jsxDEV","EditEmployee","_s","employees","setEmployees","id","navigate","form","setForm","nom","prenom","email","poste","loading","setLoading","error","setError","employee","find","emp","id_employee","toString","fetchEmployee","response","get","employeeData","data","console","handleSubmit","e","preventDefault","updatedEmployee","parseInt","put","prevEmployees","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["C:/Users/Med Amine/Desktop/pfe/main web/python/frontendai/src/pages/Employees/EditEmployee.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useData } from '../../Context/DataContext';  // Use the context\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst EditEmployee = () => {\r\n  const { employees, setEmployees } = useData(); // Use context to get employees\r\n  const { id } = useParams(); // Get employee ID from URL\r\n  const navigate = useNavigate();\r\n\r\n  const [form, setForm] = useState({\r\n    nom: '',\r\n    prenom: '',\r\n    email: '',\r\n    poste: ''\r\n  });\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if employee is in the local context state\r\n    const employee = employees.find(emp => emp.id_employee.toString() === id);\r\n\r\n    if (employee) {\r\n      setForm({\r\n        nom: employee.nom,\r\n        prenom: employee.prenom,\r\n        email: employee.email,\r\n        poste: employee.poste\r\n      });\r\n      setLoading(false); // Stop loading when data is found\r\n    } else {\r\n      // If employee is not found in context, fetch from the server (fallback)\r\nconst fetchEmployee = async () => {\r\n  try {\r\n    const response = await axios.get(`http://localhost:5000/api/employees/${id}`);\r\n    const employeeData = response.data;\r\n    if (employeeData) {\r\n      setForm({\r\n        nom: employeeData.nom,\r\n        prenom: employeeData.prenom,\r\n        email: employeeData.email,\r\n        poste: employeeData.poste\r\n      });\r\n      setLoading(false);\r\n    } else {\r\n      navigate('/employees');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching employee:', error);\r\n    setError('Failed to fetch employee');\r\n    setLoading(false);\r\n    navigate('/employees');\r\n  }\r\n};\r\n\r\n      fetchEmployee();\r\n    }\r\n  }, [id, employees, navigate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const updatedEmployee = {\r\n        ...form,\r\n        id_employee: parseInt(id) // Ensure ID is an integer\r\n      };\r\n\r\n      const response = await axios.put(`/api/employees/${id}`, updatedEmployee);\r\n\r\n      // Update the context with the updated employee data\r\n      setEmployees(prevEmployees =>\r\n        prevEmployees.map(emp =>\r\n          emp.id_employee === parseInt(id) ? response.data : emp\r\n        )\r\n      );\r\n\r\n      navigate('/employees');\r\n    } catch (error) {\r\n      console.error('Error updating employee:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Edit Employee</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form fields here */}\r\n        <button type=\"submit\">Save Changes</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditEmployee;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}