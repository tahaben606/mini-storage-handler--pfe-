{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Med Amine\\\\Desktop\\\\pfe\\\\main web\\\\python\\\\frontendai\\\\src\\\\Context\\\\DataContext.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// In your DataContext.js\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [equipment, setEquipment] = useState([]);\n  const [attributions, setAttributions] = useState([]);\n\n  // Add these functions\n  const assignEquipment = async (employeeId, equipmentId) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/attributions', {\n        id_employee: employeeId,\n        id_materiel: equipmentId\n      });\n\n      // Update local state\n      const updatedEmployees = employees.map(emp => emp.id_employee === employeeId ? {\n        ...emp,\n        equipment: [...(emp.equipment || []), equipmentId]\n      } : emp);\n      const updatedEquipment = equipment.map(eq => eq.id_materiel === equipmentId ? {\n        ...eq,\n        etat: 'Attribué'\n      } : eq);\n      setEmployees(updatedEmployees);\n      setEquipment(updatedEquipment);\n      setAttributions([...attributions, response.data]);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error assigning equipment:\", error);\n      throw error;\n    }\n  };\n  const returnEquipment = async attributionId => {\n    try {\n      const response = await axios.put(`http://localhost:5000/api/attributions/${attributionId}/return`);\n\n      // Update local state\n      const updatedAttributions = attributions.map(attr => attr.id_attribution === attributionId ? {\n        ...attr,\n        date_retour: response.data.date_retour\n      } : attr);\n      const attribution = attributions.find(a => a.id_attribution === attributionId);\n      if (attribution) {\n        const updatedEmployees = employees.map(emp => emp.id_employee === attribution.id_employee ? {\n          ...emp,\n          equipment: emp.equipment.filter(eqId => eqId !== attribution.id_materiel)\n        } : emp);\n        const updatedEquipment = equipment.map(eq => eq.id_materiel === attribution.id_materiel ? {\n          ...eq,\n          etat: 'Disponible'\n        } : eq);\n        setEmployees(updatedEmployees);\n        setEquipment(updatedEquipment);\n      }\n      setAttributions(updatedAttributions);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error returning equipment:\", error);\n      throw error;\n    }\n  };\n\n  // Add these to the value object\n  const value = {\n    employees,\n    setEmployees,\n    equipment,\n    setEquipment,\n    attributions,\n    setAttributions,\n    assignEquipment,\n    returnEquipment\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(DataProvider, \"q3Fjb75TXe/dtVTCDGDo/TmlSnc=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["DataProvider","children","_s","employees","setEmployees","useState","equipment","setEquipment","attributions","setAttributions","assignEquipment","employeeId","equipmentId","response","axios","post","id_employee","id_materiel","updatedEmployees","map","emp","updatedEquipment","eq","etat","data","error","console","returnEquipment","attributionId","put","updatedAttributions","attr","id_attribution","date_retour","attribution","find","a","filter","eqId","value","_jsxDEV","DataContext","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Med Amine/Desktop/pfe/main web/python/frontendai/src/Context/DataContext.js"],"sourcesContent":["// In your DataContext.js\r\nexport const DataProvider = ({ children }) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [equipment, setEquipment] = useState([]);\r\n  const [attributions, setAttributions] = useState([]);\r\n\r\n  // Add these functions\r\n  const assignEquipment = async (employeeId, equipmentId) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/attributions', {\r\n        id_employee: employeeId,\r\n        id_materiel: equipmentId\r\n      });\r\n      \r\n      // Update local state\r\n      const updatedEmployees = employees.map(emp => \r\n        emp.id_employee === employeeId \r\n          ? { ...emp, equipment: [...(emp.equipment || []), equipmentId] }\r\n          : emp\r\n      );\r\n      \r\n      const updatedEquipment = equipment.map(eq =>\r\n        eq.id_materiel === equipmentId\r\n          ? { ...eq, etat: 'Attribué' }\r\n          : eq\r\n      );\r\n      \r\n      setEmployees(updatedEmployees);\r\n      setEquipment(updatedEquipment);\r\n      setAttributions([...attributions, response.data]);\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error assigning equipment:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const returnEquipment = async (attributionId) => {\r\n    try {\r\n      const response = await axios.put(`http://localhost:5000/api/attributions/${attributionId}/return`);\r\n      \r\n      // Update local state\r\n      const updatedAttributions = attributions.map(attr =>\r\n        attr.id_attribution === attributionId\r\n          ? { ...attr, date_retour: response.data.date_retour }\r\n          : attr\r\n      );\r\n      \r\n      const attribution = attributions.find(a => a.id_attribution === attributionId);\r\n      if (attribution) {\r\n        const updatedEmployees = employees.map(emp =>\r\n          emp.id_employee === attribution.id_employee\r\n            ? { ...emp, equipment: emp.equipment.filter(eqId => eqId !== attribution.id_materiel) }\r\n            : emp\r\n        );\r\n        \r\n        const updatedEquipment = equipment.map(eq =>\r\n          eq.id_materiel === attribution.id_materiel\r\n            ? { ...eq, etat: 'Disponible' }\r\n            : eq\r\n        );\r\n        \r\n        setEmployees(updatedEmployees);\r\n        setEquipment(updatedEquipment);\r\n      }\r\n      \r\n      setAttributions(updatedAttributions);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error returning equipment:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Add these to the value object\r\n  const value = {\r\n    employees,\r\n    setEmployees,\r\n    equipment,\r\n    setEquipment,\r\n    attributions,\r\n    setAttributions,\r\n    assignEquipment,\r\n    returnEquipment\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider value={value}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}