{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Med Amine\\\\Desktop\\\\pfe\\\\main web\\\\frontend ai\\\\src\\\\pages\\\\Attribution\\\\AssignEquipment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useData } from '../context/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignEquipment = ({\n  equipmentId\n}) => {\n  _s();\n  const {\n    employees,\n    assignEquipment\n  } = useData();\n  const [selectedEmployee, setSelectedEmployee] = useState('');\n  const handleAssign = () => {\n    if (selectedEmployee && equipmentId) {\n      assignEquipment(equipmentId, selectedEmployee);\n      alert('Equipment assigned successfully!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assignment-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Assign Equipment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedEmployee,\n      onChange: e => setSelectedEmployee(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), employees.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: emp.id_employee,\n        children: [emp.prenom, \" \", emp.nom]\n      }, emp.id_employee, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"assign-action-btn\",\n      onClick: handleAssign,\n      children: \"Assign Equipment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignEquipment, \"zkvMs+9ga6bWXSMUcuS8+zqjP2w=\", false, function () {\n  return [useData];\n});\n_c = AssignEquipment;\nexport default AssignEquipment;\nvar _c;\n$RefreshReg$(_c, \"AssignEquipment\");","map":{"version":3,"names":["React","useState","useData","jsxDEV","_jsxDEV","AssignEquipment","equipmentId","_s","employees","assignEquipment","selectedEmployee","setSelectedEmployee","handleAssign","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","emp","id_employee","prenom","nom","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Med Amine/Desktop/pfe/main web/frontend ai/src/pages/Attribution/AssignEquipment.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useData } from '../context/DataContext';\r\n\r\nconst AssignEquipment = ({ equipmentId }) => {\r\n  const { employees, assignEquipment } = useData();\r\n  const [selectedEmployee, setSelectedEmployee] = useState('');\r\n\r\n  const handleAssign = () => {\r\n    if (selectedEmployee && equipmentId) {\r\n      assignEquipment(equipmentId, selectedEmployee);\r\n      alert('Equipment assigned successfully!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"assignment-form\">\r\n      <h3>Assign Equipment</h3>\r\n      <select\r\n        value={selectedEmployee}\r\n        onChange={(e) => setSelectedEmployee(e.target.value)}\r\n      >\r\n        <option value=\"\">Select Employee</option>\r\n        {employees.map(emp => (\r\n          <option key={emp.id_employee} value={emp.id_employee}>\r\n            {emp.prenom} {emp.nom}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button \r\n        className=\"assign-action-btn\"\r\n        onClick={handleAssign}\r\n      >\r\n        Assign Equipment\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignEquipment;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM;IAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAGP,OAAO,CAAC,CAAC;EAChD,MAAM,CAACQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIF,gBAAgB,IAAIJ,WAAW,EAAE;MACnCG,eAAe,CAACH,WAAW,EAAEI,gBAAgB,CAAC;MAC9CG,KAAK,CAAC,kCAAkC,CAAC;IAC3C;EACF,CAAC;EAED,oBACET,OAAA;IAAKU,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BX,OAAA;MAAAW,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBf,OAAA;MACEgB,KAAK,EAAEV,gBAAiB;MACxBW,QAAQ,EAAGC,CAAC,IAAKX,mBAAmB,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAL,QAAA,gBAErDX,OAAA;QAAQgB,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACxCX,SAAS,CAACgB,GAAG,CAACC,GAAG,iBAChBrB,OAAA;QAA8BgB,KAAK,EAAEK,GAAG,CAACC,WAAY;QAAAX,QAAA,GAClDU,GAAG,CAACE,MAAM,EAAC,GAAC,EAACF,GAAG,CAACG,GAAG;MAAA,GADVH,GAAG,CAACC,WAAW;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpB,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTf,OAAA;MACEU,SAAS,EAAC,mBAAmB;MAC7Be,OAAO,EAAEjB,YAAa;MAAAG,QAAA,EACvB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACZ,EAAA,CAjCIF,eAAe;EAAA,QACoBH,OAAO;AAAA;AAAA4B,EAAA,GAD1CzB,eAAe;AAmCrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}