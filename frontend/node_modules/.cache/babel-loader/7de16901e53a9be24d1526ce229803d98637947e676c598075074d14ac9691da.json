{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Med Amine\\\\Desktop\\\\pfe\\\\main web\\\\frontend ai\\\\src\\\\pages\\\\Attribution\\\\AssignEquipment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useData } from '../ontext/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignEmployee = ({\n  employeeId\n}) => {\n  _s();\n  const {\n    equipment,\n    assignEmployee\n  } = useData();\n  const [selectedEquipment, setSelectedEquipment] = useState('');\n  const handleAssign = () => {\n    if (selectedEquipment && employeeId) {\n      assignEmployee(employeeId, selectedEquipment);\n      alert('Employee assigned successfully!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assignment-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Assign Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedEquipment,\n      onChange: e => setSelectedEquipment(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Equipment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), equipment.filter(e => e.etat === 'Disponible').map(eq => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: eq.id_materiel,\n        children: [eq.type_materiel, \" (\", eq.marque, \")\"]\n      }, eq.id_materiel, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"assign-action-btn\",\n      onClick: handleAssign,\n      children: \"Assign Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignEmployee, \"soQWazqfeHWO7j+kDLFpCHso4Ag=\", false, function () {\n  return [useData];\n});\n_c = AssignEmployee;\nexport default AssignEmployee;\nvar _c;\n$RefreshReg$(_c, \"AssignEmployee\");","map":{"version":3,"names":["React","useState","useData","jsxDEV","_jsxDEV","AssignEmployee","employeeId","_s","equipment","assignEmployee","selectedEquipment","setSelectedEquipment","handleAssign","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","filter","etat","map","eq","id_materiel","type_materiel","marque","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Med Amine/Desktop/pfe/main web/frontend ai/src/pages/Attribution/AssignEquipment.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useData } from '../ontext/DataContext';\r\n\r\nconst AssignEmployee = ({ employeeId }) => {\r\n  const { equipment, assignEmployee } = useData();\r\n  const [selectedEquipment, setSelectedEquipment] = useState('');\r\n\r\n  const handleAssign = () => {\r\n    if (selectedEquipment && employeeId) {\r\n      assignEmployee(employeeId, selectedEquipment);\r\n      alert('Employee assigned successfully!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"assignment-form\">\r\n      <h3>Assign Employee</h3>\r\n      <select\r\n        value={selectedEquipment}\r\n        onChange={(e) => setSelectedEquipment(e.target.value)}\r\n      >\r\n        <option value=\"\">Select Equipment</option>\r\n        {equipment.filter(e => e.etat === 'Disponible').map(eq => (\r\n          <option key={eq.id_materiel} value={eq.id_materiel}>\r\n            {eq.type_materiel} ({eq.marque})\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button \r\n        className=\"assign-action-btn\"\r\n        onClick={handleAssign}\r\n      >\r\n        Assign Employee\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignEmployee;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC,SAAS;IAAEC;EAAe,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC/C,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIF,iBAAiB,IAAIJ,UAAU,EAAE;MACnCG,cAAc,CAACH,UAAU,EAAEI,iBAAiB,CAAC;MAC7CG,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAED,oBACET,OAAA;IAAKU,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BX,OAAA;MAAAW,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBf,OAAA;MACEgB,KAAK,EAAEV,iBAAkB;MACzBW,QAAQ,EAAGC,CAAC,IAAKX,oBAAoB,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAL,QAAA,gBAEtDX,OAAA;QAAQgB,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzCX,SAAS,CAACgB,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACG,IAAI,KAAK,YAAY,CAAC,CAACC,GAAG,CAACC,EAAE,iBACpDvB,OAAA;QAA6BgB,KAAK,EAAEO,EAAE,CAACC,WAAY;QAAAb,QAAA,GAChDY,EAAE,CAACE,aAAa,EAAC,IAAE,EAACF,EAAE,CAACG,MAAM,EAAC,GACjC;MAAA,GAFaH,EAAE,CAACC,WAAW;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTf,OAAA;MACEU,SAAS,EAAC,mBAAmB;MAC7BiB,OAAO,EAAEnB,YAAa;MAAAG,QAAA,EACvB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACZ,EAAA,CAjCIF,cAAc;EAAA,QACoBH,OAAO;AAAA;AAAA8B,EAAA,GADzC3B,cAAc;AAmCpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}