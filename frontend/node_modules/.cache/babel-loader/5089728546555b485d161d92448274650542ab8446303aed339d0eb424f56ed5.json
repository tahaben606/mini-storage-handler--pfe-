{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Med Amine\\\\Desktop\\\\pfe\\\\main web\\\\front end\\\\src\\\\pages\\\\Employees.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Employees = () => {\n  _s();\n  const navigate = useNavigate();\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    // Load employees from localStorage\n    const storedEmployees = JSON.parse(localStorage.getItem('employees') || '[]');\n    setEmployees(storedEmployees);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employees-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Overview of employee management.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/AddEmployee'),\n        className: \"add-employee-btn\",\n        children: \"Add New Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"team-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employees.map((emp, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.id_employee\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.prenom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.nom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(Employees, \"BXXJzOTL8yrskM1Ltc9nqPeXqq8=\", false, function () {\n  return [useNavigate];\n});\n_c = Employees;\nexport default Employees;\nvar _c;\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Employees","_s","navigate","employees","setEmployees","storedEmployees","JSON","parse","localStorage","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","emp","index","id_employee","prenom","nom","email","position","_c","$RefreshReg$"],"sources":["C:/Users/Med Amine/Desktop/pfe/main web/front end/src/pages/Employees.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Employees = () => {\r\n    const navigate = useNavigate();\r\n    const [employees, setEmployees] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Load employees from localStorage\r\n        const storedEmployees = JSON.parse(localStorage.getItem('employees') || '[]');\r\n        setEmployees(storedEmployees);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"employees-page\">\r\n            <section className=\"header-section\">\r\n                <h1>Employees</h1>\r\n                <p>Overview of employee management.</p>\r\n                <button \r\n                    onClick={() => navigate('/AddEmployee')}\r\n                    className=\"add-employee-btn\"\r\n                >\r\n                    Add New Employee\r\n                </button>\r\n            </section>\r\n            \r\n            <section className=\"team-section\">\r\n                <h2>Current Employees</h2>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Email</th>\r\n                            <th>Position</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employees.map((emp, index) => (\r\n                            <tr key={index}>\r\n                                <td>{emp.id_employee}</td>\r\n                                <td>{emp.prenom}</td>\r\n                                <td>{emp.nom}</td>\r\n                                <td>{emp.email}</td>\r\n                                <td>{emp.position}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Employees;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;IAC7EL,YAAY,CAACC,eAAe,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BZ,OAAA;MAASW,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC/BZ,OAAA;QAAAY,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBhB,OAAA;QAAAY,QAAA,EAAG;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACvChB,OAAA;QACIiB,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAAC,cAAc,CAAE;QACxCQ,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC/B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAEVhB,OAAA;MAASW,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC7BZ,OAAA;QAAAY,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BhB,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UAAAY,QAAA,eACIZ,OAAA;YAAAY,QAAA,gBACIZ,OAAA;cAAAY,QAAA,EAAI;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACXhB,OAAA;cAAAY,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBhB,OAAA;cAAAY,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBhB,OAAA;cAAAY,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACdhB,OAAA;cAAAY,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRhB,OAAA;UAAAY,QAAA,EACKR,SAAS,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACtBpB,OAAA;YAAAY,QAAA,gBACIZ,OAAA;cAAAY,QAAA,EAAKO,GAAG,CAACE;YAAW;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1BhB,OAAA;cAAAY,QAAA,EAAKO,GAAG,CAACG;YAAM;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBhB,OAAA;cAAAY,QAAA,EAAKO,GAAG,CAACI;YAAG;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClBhB,OAAA;cAAAY,QAAA,EAAKO,GAAG,CAACK;YAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBhB,OAAA;cAAAY,QAAA,EAAKO,GAAG,CAACM;YAAQ;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GALlBI,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAACd,EAAA,CAlDID,SAAS;EAAA,QACMH,WAAW;AAAA;AAAA4B,EAAA,GAD1BzB,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}