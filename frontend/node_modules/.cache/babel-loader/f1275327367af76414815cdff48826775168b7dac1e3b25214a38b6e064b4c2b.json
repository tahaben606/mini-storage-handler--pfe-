{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Med Amine\\\\Desktop\\\\pfe\\\\main web\\\\python\\\\frontendai\\\\src\\\\Context\\\\DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\n\n// Custom hook to use data context\nexport const useData = () => {\n  _s();\n  return useContext(DataContext);\n};\n\n// Provider component\n_s(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  const [employees, setEmployees] = useState([]);\n  const [equipment, setEquipment] = useState([]);\n  const [attributions, setAttributions] = useState([]);\n  const [admin] = useState({\n    id_admin: 1,\n    email: \"admin@example.com\",\n    mot_de_passe: \"admin123\"\n  });\n\n  // Fetch employee data from data.json or API\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // If `data.json` is local, use axios to fetch it like this:\n        const response = await axios.get('/path/to/data.json'); // Update with the correct path\n        setEmployees(response.data); // Populate the context with the data from JSON\n      } catch (error) {\n        console.error('Error fetching employee data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      employees,\n      setEmployees,\n      equipment,\n      setEquipment,\n      attributions,\n      setAttributions,\n      admin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataProvider, \"MetALXayzacV0+klVPHQoVYLm38=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","DataContext","useData","_s","DataProvider","children","_s2","employees","setEmployees","equipment","setEquipment","attributions","setAttributions","admin","id_admin","email","mot_de_passe","fetchData","response","get","data","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Med Amine/Desktop/pfe/main web/python/frontendai/src/Context/DataContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Create context\r\nconst DataContext = createContext();\r\n\r\n// Custom hook to use data context\r\nexport const useData = () => {\r\n  return useContext(DataContext);\r\n};\r\n\r\n// Provider component\r\nexport const DataProvider = ({ children }) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [equipment, setEquipment] = useState([]);\r\n  const [attributions, setAttributions] = useState([]);\r\n  const [admin] = useState({\r\n    id_admin: 1,\r\n    email: \"admin@example.com\",\r\n    mot_de_passe: \"admin123\"\r\n  });\r\n\r\n  // Fetch employee data from data.json or API\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // If `data.json` is local, use axios to fetch it like this:\r\n        const response = await axios.get('/path/to/data.json');  // Update with the correct path\r\n        setEmployees(response.data);  // Populate the context with the data from JSON\r\n      } catch (error) {\r\n        console.error('Error fetching employee data:', error);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <DataContext.Provider value={{\r\n      employees, setEmployees,\r\n      equipment, setEquipment,\r\n      attributions, setAttributions,\r\n      admin\r\n    }}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOR,UAAU,CAACM,WAAW,CAAC;AAChC,CAAC;;AAED;AAAAE,EAAA,CAJaD,OAAO;AAKpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,KAAK,CAAC,GAAGjB,QAAQ,CAAC;IACvBkB,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE,mBAAmB;IAC1BC,YAAY,EAAE;EAChB,CAAC,CAAC;;EAEF;EACAnB,SAAS,CAAC,MAAM;IACd,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAE;QACzDX,YAAY,CAACU,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAC3BjB,SAAS;MAAEC,YAAY;MACvBC,SAAS;MAAEC,YAAY;MACvBC,YAAY;MAAEC,eAAe;MAC7BC;IACF,CAAE;IAAAR,QAAA,EACCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,GAAA,CAnCWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}