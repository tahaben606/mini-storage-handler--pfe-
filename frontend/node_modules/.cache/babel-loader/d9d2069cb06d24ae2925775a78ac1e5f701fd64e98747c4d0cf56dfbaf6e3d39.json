{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Med Amine\\\\Desktop\\\\pfe\\\\main web\\\\python\\\\frontendai\\\\src\\\\Context\\\\DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport axios from 'axios';\n\n// Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\n\n// Custom Hook for using the context\nexport const useData = () => {\n  _s();\n  return useContext(DataContext);\n};\n\n// Provider Component\n_s(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  const [employees, setEmployees] = useState([]);\n  const [equipment, setEquipment] = useState([]);\n  const [attributions, setAttributions] = useState([]);\n\n  // Fetch all employees\n  const fetchEmployees = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/employees');\n      setEmployees(response.data);\n    } catch (error) {\n      console.error(\"Error fetching employees:\", error);\n    }\n  };\n\n  // Fetch all equipment\n  const fetchEquipment = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/equipment');\n      setEquipment(response.data);\n    } catch (error) {\n      console.error(\"Error fetching equipment:\", error);\n    }\n  };\n\n  // Fetch all attributions\n  const fetchAttributions = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/attributions');\n      setAttributions(response.data);\n    } catch (error) {\n      console.error(\"Error fetching attributions:\", error);\n    }\n  };\n\n  // Assign equipment to employee\n  const assignEquipment = async (employeeId, equipmentId) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/attributions', {\n        id_employee: employeeId,\n        id_materiel: equipmentId\n      });\n\n      // Update local state\n      const updatedEmployees = employees.map(emp => emp.id_employee === employeeId ? {\n        ...emp,\n        equipment: [...(emp.equipment || []), equipmentId]\n      } : emp);\n      const updatedEquipment = equipment.map(eq => eq.id_materiel === equipmentId ? {\n        ...eq,\n        etat: 'Attribué'\n      } : eq);\n      setEmployees(updatedEmployees);\n      setEquipment(updatedEquipment);\n      setAttributions([...attributions, response.data]);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error assigning equipment:\", error);\n      throw error;\n    }\n  };\n\n  // Return equipment\n  const returnEquipment = async attributionId => {\n    try {\n      const response = await axios.put(`http://localhost:5000/api/attributions/${attributionId}/return`);\n\n      // Update local state\n      const updatedAttributions = attributions.map(attr => attr.id_attribution === attributionId ? {\n        ...attr,\n        date_retour: response.data.date_retour\n      } : attr);\n      const attribution = attributions.find(a => a.id_attribution === attributionId);\n      if (attribution) {\n        const updatedEmployees = employees.map(emp => emp.id_employee === attribution.id_employee ? {\n          ...emp,\n          equipment: emp.equipment.filter(eqId => eqId !== attribution.id_materiel)\n        } : emp);\n        const updatedEquipment = equipment.map(eq => eq.id_materiel === attribution.id_materiel ? {\n          ...eq,\n          etat: 'Disponible'\n        } : eq);\n        setEmployees(updatedEmployees);\n        setEquipment(updatedEquipment);\n      }\n      setAttributions(updatedAttributions);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error returning equipment:\", error);\n      throw error;\n    }\n  };\n  // In your DataContext.js\n  const deleteAttribution = async id_attribution => {\n    try {\n      const response = await fetch(`/api/attributions/${id_attribution}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${yourAuthToken}` // If using authentication\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete record');\n      }\n\n      // Update local state\n      setAttributions(prev => prev.filter(attr => attr.id_attribution !== id_attribution));\n      return true;\n    } catch (error) {\n      console.error('Delete error:', error);\n      throw error;\n    }\n  };\n  // Initial data loading\n  React.useEffect(() => {\n    fetchEmployees();\n    fetchEquipment();\n    fetchAttributions();\n  }, []);\n\n  // Value provided to context consumers\n  const value = {\n    employees,\n    setEmployees,\n    equipment,\n    setEquipment,\n    attributions,\n    setAttributions,\n    fetchEmployees,\n    fetchEquipment,\n    fetchAttributions,\n    assignEquipment,\n    returnEquipment\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataProvider, \"DCpkzgrESmDVso7SXEENCrf71c4=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","axios","jsxDEV","_jsxDEV","DataContext","useData","_s","DataProvider","children","_s2","employees","setEmployees","equipment","setEquipment","attributions","setAttributions","fetchEmployees","response","get","data","error","console","fetchEquipment","fetchAttributions","assignEquipment","employeeId","equipmentId","post","id_employee","id_materiel","updatedEmployees","map","emp","updatedEquipment","eq","etat","returnEquipment","attributionId","put","updatedAttributions","attr","id_attribution","date_retour","attribution","find","a","filter","eqId","deleteAttribution","fetch","method","headers","yourAuthToken","ok","Error","prev","useEffect","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Med Amine/Desktop/pfe/main web/python/frontendai/src/Context/DataContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Create Context\r\nconst DataContext = createContext();\r\n\r\n// Custom Hook for using the context\r\nexport const useData = () => {\r\n  return useContext(DataContext);\r\n};\r\n\r\n// Provider Component\r\nexport const DataProvider = ({ children }) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [equipment, setEquipment] = useState([]);\r\n  const [attributions, setAttributions] = useState([]);\r\n\r\n  // Fetch all employees\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/employees');\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employees:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch all equipment\r\n  const fetchEquipment = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/equipment');\r\n      setEquipment(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching equipment:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch all attributions\r\n  const fetchAttributions = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/attributions');\r\n      setAttributions(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching attributions:\", error);\r\n    }\r\n  };\r\n\r\n  // Assign equipment to employee\r\n  const assignEquipment = async (employeeId, equipmentId) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/attributions', {\r\n        id_employee: employeeId,\r\n        id_materiel: equipmentId\r\n      });\r\n      \r\n      // Update local state\r\n      const updatedEmployees = employees.map(emp => \r\n        emp.id_employee === employeeId \r\n          ? { ...emp, equipment: [...(emp.equipment || []), equipmentId] }\r\n          : emp\r\n      );\r\n      \r\n      const updatedEquipment = equipment.map(eq =>\r\n        eq.id_materiel === equipmentId\r\n          ? { ...eq, etat: 'Attribué' }\r\n          : eq\r\n      );\r\n      \r\n      setEmployees(updatedEmployees);\r\n      setEquipment(updatedEquipment);\r\n      setAttributions([...attributions, response.data]);\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error assigning equipment:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Return equipment\r\n  const returnEquipment = async (attributionId) => {\r\n    try {\r\n      const response = await axios.put(`http://localhost:5000/api/attributions/${attributionId}/return`);\r\n      \r\n      // Update local state\r\n      const updatedAttributions = attributions.map(attr =>\r\n        attr.id_attribution === attributionId\r\n          ? { ...attr, date_retour: response.data.date_retour }\r\n          : attr\r\n      );\r\n      \r\n      const attribution = attributions.find(a => a.id_attribution === attributionId);\r\n      if (attribution) {\r\n        const updatedEmployees = employees.map(emp =>\r\n          emp.id_employee === attribution.id_employee\r\n            ? { ...emp, equipment: emp.equipment.filter(eqId => eqId !== attribution.id_materiel) }\r\n            : emp\r\n        );\r\n        \r\n        const updatedEquipment = equipment.map(eq =>\r\n          eq.id_materiel === attribution.id_materiel\r\n            ? { ...eq, etat: 'Disponible' }\r\n            : eq\r\n        );\r\n        \r\n        setEmployees(updatedEmployees);\r\n        setEquipment(updatedEquipment);\r\n      }\r\n      \r\n      setAttributions(updatedAttributions);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error returning equipment:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n// In your DataContext.js\r\nconst deleteAttribution = async (id_attribution) => {\r\n  try {\r\n    const response = await fetch(`/api/attributions/${id_attribution}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${yourAuthToken}` // If using authentication\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to delete record');\r\n    }\r\n\r\n    // Update local state\r\n    setAttributions(prev => prev.filter(attr => attr.id_attribution !== id_attribution));\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Delete error:', error);\r\n    throw error;\r\n  }\r\n};\r\n  // Initial data loading\r\n  React.useEffect(() => {\r\n    fetchEmployees();\r\n    fetchEquipment();\r\n    fetchAttributions();\r\n  }, []);\r\n\r\n  // Value provided to context consumers\r\n  const value = {\r\n    employees,\r\n    setEmployees,\r\n    equipment,\r\n    setEquipment,\r\n    attributions,\r\n    setAttributions,\r\n    fetchEmployees,\r\n    fetchEquipment,\r\n    fetchAttributions,\r\n    assignEquipment,\r\n    returnEquipment\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider value={value}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}