{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Med Amine\\\\Desktop\\\\pfe\\\\main web\\\\git\\\\mini-storage-handler--pfe-\\\\frontend\\\\src\\\\Context\\\\DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\n\n// Custom Hook\nexport const useData = () => {\n  _s();\n  return useContext(DataContext);\n};\n\n// Provider Component\n_s(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  const [employees, setEmployees] = useState([]);\n  const [equipment, setEquipment] = useState([]);\n  const [attributions, setAttributions] = useState([]);\n\n  // Fetch employees\n  const fetchEmployees = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/employees');\n      setEmployees(res.data);\n    } catch (error) {\n      console.error(\"Error fetching employees:\", error);\n    }\n  };\n\n  // Fetch equipment\n  const fetchEquipment = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/equipment');\n      setEquipment(res.data);\n    } catch (error) {\n      console.error(\"Error fetching equipment:\", error);\n    }\n  };\n\n  // Fetch attributions\n  const fetchAttributions = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/attributions');\n      setAttributions(res.data);\n    } catch (error) {\n      console.error(\"Error fetching attributions:\", error);\n    }\n  };\n\n  // Assign equipment\n  const assignEquipment = async (employeeId, equipmentId) => {\n    try {\n      const res = await axios.post('http://localhost:5000/api/attributions', {\n        id_employee: employeeId,\n        id_materiel: equipmentId\n      });\n\n      // Update local state\n      setEmployees(prev => prev.map(emp => emp.id_employee === employeeId ? {\n        ...emp,\n        equipment: [...(emp.equipment || []), equipmentId]\n      } : emp));\n      setEquipment(prev => prev.map(eq => eq.id_materiel === equipmentId ? {\n        ...eq,\n        etat: 'Attribué'\n      } : eq));\n      setAttributions(prev => [...prev, res.data]);\n      return res.data;\n    } catch (error) {\n      console.error(\"Error assigning equipment:\", error);\n      throw error;\n    }\n  };\n\n  // Return equipment\n  const returnEquipment = async attributionId => {\n    try {\n      const res = await axios.put(`http://localhost:5000/api/attributions/${attributionId}/return`);\n      const attribution = attributions.find(a => a.id_attribution === attributionId);\n      if (attribution) {\n        setEmployees(prev => prev.map(emp => emp.id_employee === attribution.id_employee ? {\n          ...emp,\n          equipment: emp.equipment.filter(eqId => eqId !== attribution.id_materiel)\n        } : emp));\n        setEquipment(prev => prev.map(eq => eq.id_materiel === attribution.id_materiel ? {\n          ...eq,\n          etat: 'Disponible'\n        } : eq));\n      }\n      setAttributions(prev => prev.map(attr => attr.id_attribution === attributionId ? {\n        ...attr,\n        date_retour: res.data.date_retour\n      } : attr));\n      return res.data;\n    } catch (error) {\n      console.error(\"Error returning equipment:\", error);\n      throw error;\n    }\n  };\n\n  // Delete attribution\n  const deleteAttribution = async id_attribution => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/attributions/${id_attribution}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!res.ok) throw new Error('Failed to delete attribution');\n      setAttributions(prev => prev.filter(attr => attr.id_attribution !== id_attribution));\n      return true;\n    } catch (error) {\n      console.error('Error deleting attribution:', error);\n      throw error;\n    }\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    fetchEmployees();\n    fetchEquipment();\n    fetchAttributions();\n  }, []);\n  const value = {\n    employees,\n    setEmployees,\n    equipment,\n    setEquipment,\n    attributions,\n    setAttributions,\n    fetchEmployees,\n    fetchEquipment,\n    fetchAttributions,\n    assignEquipment,\n    returnEquipment,\n    deleteAttribution // ✅ Included in context\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataProvider, \"DCpkzgrESmDVso7SXEENCrf71c4=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","DataContext","useData","_s","DataProvider","children","_s2","employees","setEmployees","equipment","setEquipment","attributions","setAttributions","fetchEmployees","res","get","data","error","console","fetchEquipment","fetchAttributions","assignEquipment","employeeId","equipmentId","post","id_employee","id_materiel","prev","map","emp","eq","etat","returnEquipment","attributionId","put","attribution","find","a","id_attribution","filter","eqId","attr","date_retour","deleteAttribution","fetch","method","headers","ok","Error","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Med Amine/Desktop/pfe/main web/git/mini-storage-handler--pfe-/frontend/src/Context/DataContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create Context\nconst DataContext = createContext();\n\n// Custom Hook\nexport const useData = () => useContext(DataContext);\n\n// Provider Component\nexport const DataProvider = ({ children }) => {\n  const [employees, setEmployees] = useState([]);\n  const [equipment, setEquipment] = useState([]);\n  const [attributions, setAttributions] = useState([]);\n\n  // Fetch employees\n  const fetchEmployees = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/employees');\n      setEmployees(res.data);\n    } catch (error) {\n      console.error(\"Error fetching employees:\", error);\n    }\n  };\n\n  // Fetch equipment\n  const fetchEquipment = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/equipment');\n      setEquipment(res.data);\n    } catch (error) {\n      console.error(\"Error fetching equipment:\", error);\n    }\n  };\n\n  // Fetch attributions\n  const fetchAttributions = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/attributions');\n      setAttributions(res.data);\n    } catch (error) {\n      console.error(\"Error fetching attributions:\", error);\n    }\n  };\n\n  // Assign equipment\n  const assignEquipment = async (employeeId, equipmentId) => {\n    try {\n      const res = await axios.post('http://localhost:5000/api/attributions', {\n        id_employee: employeeId,\n        id_materiel: equipmentId\n      });\n\n      // Update local state\n      setEmployees(prev =>\n        prev.map(emp =>\n          emp.id_employee === employeeId\n            ? { ...emp, equipment: [...(emp.equipment || []), equipmentId] }\n            : emp\n        )\n      );\n\n      setEquipment(prev =>\n        prev.map(eq =>\n          eq.id_materiel === equipmentId\n            ? { ...eq, etat: 'Attribué' }\n            : eq\n        )\n      );\n\n      setAttributions(prev => [...prev, res.data]);\n      return res.data;\n    } catch (error) {\n      console.error(\"Error assigning equipment:\", error);\n      throw error;\n    }\n  };\n\n  // Return equipment\n  const returnEquipment = async (attributionId) => {\n    try {\n      const res = await axios.put(`http://localhost:5000/api/attributions/${attributionId}/return`);\n\n      const attribution = attributions.find(a => a.id_attribution === attributionId);\n\n      if (attribution) {\n        setEmployees(prev =>\n          prev.map(emp =>\n            emp.id_employee === attribution.id_employee\n              ? { ...emp, equipment: emp.equipment.filter(eqId => eqId !== attribution.id_materiel) }\n              : emp\n          )\n        );\n\n        setEquipment(prev =>\n          prev.map(eq =>\n            eq.id_materiel === attribution.id_materiel\n              ? { ...eq, etat: 'Disponible' }\n              : eq\n          )\n        );\n      }\n\n      setAttributions(prev =>\n        prev.map(attr =>\n          attr.id_attribution === attributionId\n            ? { ...attr, date_retour: res.data.date_retour }\n            : attr\n        )\n      );\n\n      return res.data;\n    } catch (error) {\n      console.error(\"Error returning equipment:\", error);\n      throw error;\n    }\n  };\n\n  // Delete attribution\n  const deleteAttribution = async (id_attribution) => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/attributions/${id_attribution}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!res.ok) throw new Error('Failed to delete attribution');\n\n      setAttributions(prev => prev.filter(attr => attr.id_attribution !== id_attribution));\n      return true;\n    } catch (error) {\n      console.error('Error deleting attribution:', error);\n      throw error;\n    }\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    fetchEmployees();\n    fetchEquipment();\n    fetchAttributions();\n  }, []);\n\n  const value = {\n    employees,\n    setEmployees,\n    equipment,\n    setEquipment,\n    attributions,\n    setAttributions,\n    fetchEmployees,\n    fetchEquipment,\n    fetchAttributions,\n    assignEquipment,\n    returnEquipment,\n    deleteAttribution // ✅ Included in context\n  };\n\n  return (\n    <DataContext.Provider value={value}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}